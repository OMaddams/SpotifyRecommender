@page "/"
@using Microsoft.AspNetCore.Components.WebView.Maui
@using SpotifyRecommender.App
@inject ApiCaller apiCaller

<h1>Hello, world!</h1>

Welcome to your new app.
@if (!isAuthorized)
{
<button class="btn-main btn" @onclick="Authorize">Authorize with Spotify</button>
}
else{
    <p>Authorized</p>
    <button class="btn-main btn" @onclick="GetTopTracks">Get Top tracks</button>
}


@if(spotifyHtml != string.Empty)
{
    <div>
        @spotifyHtml
    </div>
}

@code{
    bool isAuthorized = false;
    string spotifyHtml = string.Empty;
    protected override void OnInitialized()
    {
        isAuthorized = apiCaller.isAuthorized;
    }

    private async void Authorize(){
        Uri spotAuthUri = await apiCaller.RequestAuthorization();
        BlazorWebView blazorWebView = new();

        GoToAuth(spotAuthUri);

    }
    private async void GetTopTracks()
    {
        await apiCaller.GetUserTopTracks();
    }
    private void GoToAuth(Uri url)
    {
        
        App.Current.MainPage.Navigation.PushAsync(new AuthPage(apiCaller ,url),true);
    }

    private async Task OpenExternalBrowser(Uri url){
        await Launcher.OpenAsync(url);
    }
}





